{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","props","state","todoList","activeItem","id","title","completed","editing","fetchTasks","bind","handleChange","handleSubmit","getCookie","startEdit","deleteItem","strikeUnstrike","name","cookieValue","document","cookie","cookies","split","i","length","trim","substring","decodeURIComponent","this","console","log","fetch","then","response","json","data","setState","e","target","value","preventDefault","csrftoken","url","method","headers","body","JSON","stringify","catch","error","task","tasks","self","className","onSubmit","style","flex","onChange","type","placeholder","map","index","onClick","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.e0f7cdad.chunk.js","sourcesContent":["import React from 'react';\r\nimport './App.css';\r\n\r\n\r\nclass App extends React.Component {\r\n  constructor(props){\r\n    super(props);\r\n      this.state = {\r\n        todoList:[],\r\n        activeItem:{\r\n          id:null, \r\n          title:'',\r\n          completed:false,\r\n        },\r\n        editing:false,\r\n      }\r\n      this.fetchTasks = this.fetchTasks.bind(this)\r\n      this.handleChange = this.handleChange.bind(this)\r\n      this.handleSubmit = this.handleSubmit.bind(this)\r\n      this.getCookie = this.getCookie.bind(this)\r\n\r\n\r\n      this.startEdit = this.startEdit.bind(this)\r\n      this.deleteItem = this.deleteItem.bind(this)\r\n      this.strikeUnstrike = this.strikeUnstrike.bind(this)\r\n  };\r\n\r\n  getCookie(name) {\r\n    var cookieValue = null;\r\n    if (document.cookie && document.cookie !== '') {\r\n        var cookies = document.cookie.split(';');\r\n        for (var i = 0; i < cookies.length; i++) {\r\n            var cookie = cookies[i].trim();\r\n            // Does this cookie string begin with the name we want?\r\n            if (cookie.substring(0, name.length + 1) === (name + '=')) {\r\n                cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    return cookieValue;\r\n}\r\n\r\n  componentWillMount(){\r\n    this.fetchTasks()\r\n  }\r\n\r\n  fetchTasks(){\r\n    console.log('Fetching...')\r\n\r\n    fetch('https://www.linibelajar.com/api/task-list/')\r\n    .then(response => response.json())\r\n    .then(data => \r\n      this.setState({\r\n        todoList:data\r\n      })\r\n      )\r\n  }\r\n\r\n  handleChange(e){\r\n    var name = e.target.name\r\n    var value = e.target.value\r\n    console.log('Name:', name)\r\n    console.log('Value:', value)\r\n\r\n    this.setState({\r\n      activeItem:{\r\n        ...this.state.activeItem,\r\n        title:value\r\n      }\r\n    })\r\n  }\r\n\r\n  handleSubmit(e){\r\n    e.preventDefault()\r\n    console.log('ITEM:', this.state.activeItem)\r\n\r\n    var csrftoken = this.getCookie('csrftoken')\r\n\r\n    var url = 'https://www.linibelajar.com/api/task-create/'\r\n\r\n    if(this.state.editing == true){\r\n      url = `https://www.linibelajar.com/api/task-update/${ this.state.activeItem.id}/`\r\n      this.setState({\r\n        editing:false\r\n      })\r\n    }\r\n\r\n\r\n\r\n    fetch(url, {\r\n      method:'POST',\r\n      headers:{\r\n        'Content-type':'application/json',\r\n        'X-CSRFToken':csrftoken,\r\n      },\r\n      body:JSON.stringify(this.state.activeItem)\r\n    }).then((response)  => {\r\n        this.fetchTasks()\r\n        this.setState({\r\n           activeItem:{\r\n          id:null, \r\n          title:'',\r\n          completed:false,\r\n        }\r\n        })\r\n    }).catch(function(error){\r\n      console.log('ERROR:', error)\r\n    })\r\n\r\n  }\r\n\r\n  startEdit(task){\r\n    this.setState({\r\n      activeItem:task,\r\n      editing:true,\r\n    })\r\n  }\r\n\r\n\r\n  deleteItem(task){\r\n    var csrftoken = this.getCookie('csrftoken')\r\n\r\n    fetch(`https://www.linibelajar.com/api/task-delete/${task.id}/`, {\r\n      method:'DELETE',\r\n      headers:{\r\n        'Content-type':'application/json',\r\n        'X-CSRFToken':csrftoken,\r\n      },\r\n    }).then((response) =>{\r\n\r\n      this.fetchTasks()\r\n    })\r\n  }\r\n\r\n\r\n  strikeUnstrike(task){\r\n\r\n    task.completed = !task.completed\r\n    var csrftoken = this.getCookie('csrftoken')\r\n    var url = `https://www.linibelajar.com/api/task-update/${task.id}/`\r\n\r\n      fetch(url, {\r\n        method:'POST',\r\n        headers:{\r\n          'Content-type':'application/json',\r\n          'X-CSRFToken':csrftoken,\r\n        },\r\n        body:JSON.stringify({'completed': task.completed, 'title':task.title})\r\n      }).then(() => {\r\n        this.fetchTasks()\r\n      })\r\n\r\n    console.log('TASK:', task.completed)\r\n  }\r\n\r\n\r\n  render(){\r\n    var tasks = this.state.todoList\r\n    var self = this\r\n    return(\r\n        <div className=\"container\">\r\n\r\n          <div id=\"task-container\">\r\n              <div  id=\"form-wrapper\">\r\n                 <form onSubmit={this.handleSubmit}  id=\"form\">\r\n                    <div className=\"flex-wrapper\">\r\n                        <div style={{flex: 6}}>\r\n                            <input onChange={this.handleChange} className=\"form-control\" id=\"title\" value={this.state.activeItem.title} type=\"text\" name=\"title\" placeholder=\"Add task..\" />\r\n                         </div>\r\n\r\n                         <div style={{flex: 1}}>\r\n                            <input id=\"submit\" className=\"btn btn-warning\" type=\"submit\" name=\"Add\" />\r\n                          </div>\r\n                      </div>\r\n                </form>\r\n             \r\n              </div>\r\n\r\n              <div  id=\"list-wrapper\">         \r\n                    {tasks.map(function(task, index){\r\n                      return(\r\n                          <div key={index} className=\"task-wrapper flex-wrapper\">\r\n\r\n                            <div onClick={() => self.strikeUnstrike(task)} style={{flex:7}}>\r\n\r\n                                {task.completed == false ? (\r\n                                    <span>{task.title}</span>\r\n\r\n                                  ) : (\r\n\r\n                                    <strike>{task.title}</strike>\r\n                                  )}\r\n  \r\n                            </div>\r\n\r\n                            <div style={{flex:1}}>\r\n                                <button onClick={() => self.startEdit(task)} className=\"btn btn-sm btn-outline-info\">Edit</button>\r\n                            </div>\r\n\r\n                            <div style={{flex:1}}>\r\n                                <button onClick={() => self.deleteItem(task)} className=\"btn btn-sm btn-outline-dark delete\">-</button>\r\n                            </div>\r\n\r\n                          </div>\r\n                        )\r\n                    })}\r\n              </div>\r\n          </div>\r\n          \r\n        </div>\r\n      )\r\n  }\r\n}\r\n\r\n\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}